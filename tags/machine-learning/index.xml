<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Machine learning on Tech Vagabond! - Gabriele LUCULLI&#39;s Web Page</title>
    <link>https://techvagabond.org/tags/machine-learning/</link>
    <description>Recent content in Machine learning on Tech Vagabond! - Gabriele LUCULLI&#39;s Web Page</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 10 Dec 2020 14:57:38 +0200</lastBuildDate><atom:link href="https://techvagabond.org/tags/machine-learning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Forecasting Profits Direction: Weekly Stop-Loss and Stop-Gain</title>
      <link>https://techvagabond.org/forecasting-profits-direction-weekly-stop-loss-and-stop-gain/</link>
      <pubDate>Thu, 10 Dec 2020 14:57:38 +0200</pubDate>
      
      <guid>https://techvagabond.org/forecasting-profits-direction-weekly-stop-loss-and-stop-gain/</guid>
      <description>In a previous post we backtested our logistic model with walk-forward and we found two useful trading configurations, one for Monday-Wednesday and the other for Tuesday-Thursday-Friday. They are reported hereafter.
   Now, a question we could have is, do there is any way to improve our pnl ? We know that we could try a different machine learning paradigm in order to improve our training metrics (i.e. accuracy, sensitivity and specificity) but, assuming we don&amp;rsquo;t want to go to this direction, we can still try to improve our pnl by reducing our losses.</description>
    </item>
    
    <item>
      <title>Analysis and Classification of Aerial LiDAR Data</title>
      <link>https://techvagabond.org/analysis-and-classification-of-aerial-lidar-data/</link>
      <pubDate>Mon, 23 Nov 2020 14:57:38 +0200</pubDate>
      
      <guid>https://techvagabond.org/analysis-and-classification-of-aerial-lidar-data/</guid>
      <description>The purpose of this project was to analyse some LiDAR (Light Detection and Ranging) data from a drone and to classify the detected objects. Our lidar data is related to mountain regions where there can be different kinds of vegetation, high-voltage electric lines, rivers or houses. This kind of analysis can be useful for power line inspections by a drone or the inspection of riverbeds or the analysis of any other human or natural feature which is detectable by a lidar sensor.</description>
    </item>
    
    <item>
      <title>Forecasting Profits Direction: PnL Backtesting</title>
      <link>https://techvagabond.org/forecasting-profits-direction-pnl-backtesting/</link>
      <pubDate>Wed, 18 Nov 2020 14:57:38 +0200</pubDate>
      
      <guid>https://techvagabond.org/forecasting-profits-direction-pnl-backtesting/</guid>
      <description>In a previous post we developed a logistic model with walk-forward to forecast profits direction as extension of a random forest model with the hope to improve its forecasting capabilities. Unfortunately, we didn&amp;rsquo;t get any better metric (accuracy, sensitivity, etc) and the bare testing of pnl prediction in a single week didn&amp;rsquo;t provide better results either.
However, it is not possible to draw a general conclusion by testing a single case because most of the datasets coming from the financial markets are no stationary by nature, therefore no single case testing can be generalized.</description>
    </item>
    
    <item>
      <title>Forecasting Profits Direction: Logistic Model</title>
      <link>https://techvagabond.org/forecasting-profits-direction-logistic-model/</link>
      <pubDate>Tue, 17 Nov 2020 14:57:38 +0200</pubDate>
      
      <guid>https://techvagabond.org/forecasting-profits-direction-logistic-model/</guid>
      <description>In the previous posts we developed a random forest model and walk-forward validation approach to forecast the direction of trades in a CAC40 dataset. Here we investigate the adoption of a logistic model instead of random forests. Since we still adopt a walk-forward validation, we will actually adopt an ensemble of logistic models, one for each of the walk-forward splitting.
Logistic modeling is quite common in binary classification problems, it is based on simple math which extends the linear regression approach, it has a nice bayesian interpretation and it can be seen as a single-layer perceptron so a first step in the world of neural networks and deep learning.</description>
    </item>
    
    <item>
      <title>Forecasting Profits Direction: Walk-Forward Validation</title>
      <link>https://techvagabond.org/forecasting-profits-direction-walk-forward-validation/</link>
      <pubDate>Wed, 28 Oct 2020 14:57:38 +0200</pubDate>
      
      <guid>https://techvagabond.org/forecasting-profits-direction-walk-forward-validation/</guid>
      <description>In a previous post we developed a random forest model to forecast the direction of trades in a CAC40 dataset. Despite the fact that the training accuracy was extremely high, the forecasting metrics resulted quite poor. Generally speaking, such kind of discrepancy is a clear evidence of overfitting in the learning process: the model is not able to generalize because it fitted too much with the training data.
Of course, overfitting can be reduced by constraining the learning process and therefore trading an increase in its generalization capabilities for reduced training metrics - and this can be done in our case, for example, by constraining the number of generated trees in the random forest.</description>
    </item>
    
    <item>
      <title>Forecasting Profits Direction in a Dataset of CAC40 Trades</title>
      <link>https://techvagabond.org/forecasting-profits-direction-in-a-dataset-of-cac40-trades/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://techvagabond.org/forecasting-profits-direction-in-a-dataset-of-cac40-trades/</guid>
      <description>Our dataset consists of many possible trades generated by several different strategies and our main purpose is to identify the most useful features in order to detect the trades with positive gain and therefore the winning strategies. After having imported the data, we are going to clean in it up and to reformat them. Each record of the dataframe is a single transaction which consists of three trades. One trade to open the position and two trades to close it.</description>
    </item>
    
  </channel>
</rss>
