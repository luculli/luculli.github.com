<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>EDA on Tech Vagabond!</title>
    <link>https://techvagabond.org/tags/eda/</link>
    <description>Recent content in EDA on Tech Vagabond!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 04 Jan 2005 14:57:38 +0200</lastBuildDate><atom:link href="https://techvagabond.org/tags/eda/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Generic development tools for embedded software design (US Patent App. 10/666,725)</title>
      <link>https://techvagabond.org/generic-development-tools-for-embedded-software-design-us-patent-app.-10/666725/</link>
      <pubDate>Tue, 04 Jan 2005 14:57:38 +0200</pubDate>
      
      <guid>https://techvagabond.org/generic-development-tools-for-embedded-software-design-us-patent-app.-10/666725/</guid>
      <description>Process for processing an executable embedded software code, said process comprising: reading an executable embedded code for one predetermined processor; extracting code sections from said executable embedded code; reading a file containing a description of a set of instructions for said predetermined processor, based on the concepts of TOKEN, FIELDS, ATTRIBUTES and CONSTRUCTORS of the SLED language, enriched with an additional CLASS definition grouping different instruction under a same label; and using said description in order to derive from said TOKEN, FIELDS, ATTRIBUTES, CONSTRUCTORS and CLASS an internal representation taking the form of a decision tree.</description>
    </item>
    
    <item>
      <title>Efficient and effective simulation of memory maps for system-on-chip</title>
      <link>https://techvagabond.org/efficient-and-effective-simulation-of-memory-maps-for-system-on-chip/</link>
      <pubDate>Sat, 04 Sep 2004 14:57:38 +0200</pubDate>
      
      <guid>https://techvagabond.org/efficient-and-effective-simulation-of-memory-maps-for-system-on-chip/</guid>
      <description>Abstract: The design of complex system-on-chip (SOC) requires new methods and tools for the optimization of embedded software which is executed on ever more complex hardware architectures. The tuning of the memory subsystem is particularly difficult due to the many design parameters which are involved and the long time which is required to simulate different design configurations. We propose a very effective mechanism for the simulation of generic memory maps on architectures with instruction and/or data cache memory.</description>
    </item>
    
    <item>
      <title>Flexible Simulation of Memory Maps for Embedded Systems</title>
      <link>https://techvagabond.org/flexible-simulation-of-memory-maps-for-embedded-systems/</link>
      <pubDate>Sat, 04 Sep 2004 14:57:38 +0200</pubDate>
      
      <guid>https://techvagabond.org/flexible-simulation-of-memory-maps-for-embedded-systems/</guid>
      <description>Abstract: The design of complex system-on-chip (SOC) requires new methods and tools for the optimization of embedded software which is executed on ever more complex hardware architectures. The tuning of the memory subsystem is particularly difficult due to the many design parameters which are involved and the long time which is required to simulate different design configurations. In this paper, we propose a very effective mechanism for the simulation of generic memory maps on architectures with instruction and/or data cache memory.</description>
    </item>
    
    <item>
      <title>An ISA-retargetable framework for embedded software analysis</title>
      <link>https://techvagabond.org/an-isa-retargetable-framework-for-embedded-software-analysis/</link>
      <pubDate>Sat, 04 Jan 2003 14:57:38 +0200</pubDate>
      
      <guid>https://techvagabond.org/an-isa-retargetable-framework-for-embedded-software-analysis/</guid>
      <description>Abstract: Industry requires new advanced tools and methodologies for the design of complex system-on-chip platforms. In STMicroelectronics we developed an innovative retargetable technology for the analysis and optimization of embedded software. In this paper we provide an overview of our retargetable tool chain which consists of: a specification reader a disassembler a code analyzer and a functional simulator. Their capabilities, specific features and limitations are described in detail.  [PDF] </description>
    </item>
    
    <item>
      <title>Value-based source code specialization for energy reduction</title>
      <link>https://techvagabond.org/value-based-source-code-specialization-for-energy-reduction/</link>
      <pubDate>Wed, 04 Sep 2002 14:57:38 +0200</pubDate>
      
      <guid>https://techvagabond.org/value-based-source-code-specialization-for-energy-reduction/</guid>
      <description>Abstract: The objective of this research is to create a framework for energy optimization of software programs. In particular, this paper presents algorithms and a tool flow to reduce the computational effort of programs, using value profiling and partial evaluation. Such a reduction translates into both energy savings and performance improvement. Namely, our tool reduces computational effort by specializing a program for highly expected situations. Procedure calls which are frequently executed with same parameter values are defined as highly expected situations (common cases).</description>
    </item>
    
    <item>
      <title>A software tool for the timing analysis of embedded software</title>
      <link>https://techvagabond.org/a-software-tool-for-the-timing-analysis-of-embedded-software/</link>
      <pubDate>Sat, 09 Sep 2000 14:57:38 +0200</pubDate>
      
      <guid>https://techvagabond.org/a-software-tool-for-the-timing-analysis-of-embedded-software/</guid>
      <description>Abstract: The presence of real-time software modules which interact with specific hardware architectures is growing in today&#39;s embedded applications. New methods and tools are needed for program analysis and the validation of these designs. The timing analysis of software is an essential aspect because real-time requirements need to be validated and because performance objectives could be missed if the software design does not fit with the hardware design. In this paper, we describe a new timing analysis for software which is executed on architectures with a one-level instruction cache.</description>
    </item>
    
  </channel>
</rss>
